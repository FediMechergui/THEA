---
# THEA Partial Deployment Playbook
# Deploys services on thea-cicd + configures thea-loadbalancer
# Use when thea-app1 and thea-app2 are not available

- name: Deploy THEA Application Services on thea-cicd
  hosts: app_servers
  become: yes
  become_method: sudo
  gather_facts: yes
  vars_files:
    - vars/{{ env | default('development') }}.yml
    - vars/secrets.yml

  pre_tasks:
    - name: Ensure we're running locally
      debug:
        msg: "Deploying services on {{ inventory_hostname }} ({{ ansible_host }})"

  roles:
    - role: common
    - role: docker

  post_tasks:
    - name: Wait for services to be healthy
      uri:
        url: "http://localhost:3000/health"
        method: GET
        status_code: 200
      register: health_check
      until: health_check.status == 200
      retries: 30
      delay: 10
      ignore_errors: yes

    - name: Application services deployment summary
      debug:
        msg:
          - "✅ THEA Application Services deployed on {{ inventory_hostname }}"
          - "📊 Services Status: {{ health_check.status | default('Unknown') }}"
          - "🌐 Node.js Backend: http://{{ primary_app_server }}:3000"
          - "🤖 FastAPI OCR: http://{{ primary_app_server }}:8000"
          - "💬 RAG Chatbot: http://{{ primary_app_server }}:8001"
          - "📈 Grafana: http://{{ primary_app_server }}:3010"
          - "📊 Prometheus: http://{{ primary_app_server }}:9090"

    - name: Create deployment marker
      file:
        path: /opt/thea/.deployed
        state: touch
        mode: '0644'

# Deploy Nginx Load Balancer on thea-loadbalancer
- name: Deploy THEA Load Balancer
  hosts: loadbalancer_servers
  become: yes
  gather_facts: yes
  vars_files:
    - vars/{{ env | default('development') }}.yml
    - vars/secrets.yml

  pre_tasks:
    - name: Display load balancer configuration
      debug:
        msg:
          - "Configuring load balancer on {{ inventory_hostname }}"
          - "Primary backend: {{ primary_app_server }}"
          - "Backup backend: {{ backup_app_server }}"

  tasks:
    - name: Update package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

  roles:
    - role: nginx

  post_tasks:
    - name: Verify load balancer health
      uri:
        url: "http://{{ ansible_host }}:80/health"
        method: GET
        status_code: 200
      register: lb_health
      until: lb_health.status == 200
      retries: 10
      delay: 5

    - name: Load balancer deployment summary
      debug:
        msg:
          - "🎉 THEA Load Balancer deployed successfully!"
          - "🔀 Load Balancer: http://{{ ansible_host }}"
          - "🎯 Backend Server: {{ primary_app_server }}"
          - ""
          - "📊 Access services through load balancer:"
          - "  - Node.js API: http://{{ ansible_host }}:3000"
          - "  - OCR Service: http://{{ ansible_host }}:8000"
          - "  - Chatbot: http://{{ ansible_host }}:8001"
          - "  - Grafana: http://{{ ansible_host }}:3010"
          - "  - Prometheus: http://{{ ansible_host }}:9090"
          - ""
          - "📝 Note: Currently using thea-cicd as backend"
          - "📝 When app1/app2 are ready, update inventory.ini and redeploy"
