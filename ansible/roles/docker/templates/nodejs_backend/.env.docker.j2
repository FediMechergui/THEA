# THEA Backend Environment Configuration
# Docker Environment Variables

# Application Configuration
NODE_ENV={{ node_env }}
PORT=3000
API_VERSION=v1
LOG_LEVEL={{ log_level }}

# Database Configuration (MySQL)
DATABASE_URL=mysql://{{ mysql_user }}@mysql:3306/{{ mysql_database }}
DATABASE_HOST=mysql
DATABASE_PORT=3306
DATABASE_NAME={{ mysql_database }}
DATABASE_USER={{ mysql_user }}
DATABASE_PASSWORD={{ mysql_password }}

# JWT Configuration
JWT_SECRET={{ jwt_secret }}
JWT_EXPIRES_IN={{ jwt_expires_in }}
JWT_REFRESH_EXPIRES_IN={{ jwt_refresh_expires_in }}

# Redis Configuration
REDIS_HOST=redis
REDIS_PORT={{ redis_port }}
REDIS_PASSWORD={{ redis_password }}
REDIS_DB=0
REDIS_TTL={{ redis_ttl }}
REDIS_URL=redis://redis:{{ redis_port }}

# MinIO Configuration
MINIO_ENDPOINT=minio
MINIO_PORT={{ minio_port }}
MINIO_ACCESS_KEY={{ minio_root_user }}
MINIO_SECRET_KEY={{ minio_root_password }}
MINIO_USE_SSL={{ minio_use_ssl }}
MINIO_BUCKET_NAME={{ minio_bucket_name }}

# RabbitMQ Configuration
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT={{ rabbitmq_port }}
RABBITMQ_USER={{ rabbitmq_user }}
RABBITMQ_PASSWORD={{ rabbitmq_password }}
RABBITMQ_VHOST=/
RABBITMQ_URL=amqp://{{ rabbitmq_user }}:{{ rabbitmq_password }}@rabbitmq:{{ rabbitmq_port }}/

# Security Configuration
BCRYPT_ROUNDS={{ bcrypt_rounds }}
BCRYPT_SALT_ROUNDS={{ bcrypt_salt_rounds }}
RATE_LIMIT_WINDOW_MS={{ rate_limit_window_ms }}
RATE_LIMIT_MAX_REQUESTS={{ rate_limit_max_requests }}
CORS_ORIGIN={{ cors_origin }}
HELMET_ENABLED={{ helmet_enabled }}
SESSION_SECRET={{ session_secret }}

# Logging Configuration
LOG_FILE_PATH={{ log_file_path }}
LOG_MAX_SIZE={{ log_max_size }}
LOG_MAX_FILES={{ log_max_files }}

# File Upload Configuration
MAX_FILE_SIZE={{ max_file_size }}
ALLOWED_FILE_TYPES={{ allowed_file_types }}
UPLOAD_TEMP_DIR={{ upload_temp_dir }}

# Microservices Configuration
OCR_SERVICE_URL=http://fastapi-ocr:{{ ocr_port }}
CHATBOT_SERVICE_URL=http://rag-chatbot:{{ chatbot_port }}
API_KEY={{ api_key }}

# Monitoring Configuration
ENABLE_METRICS={{ enable_metrics }}
METRICS_PORT={{ prometheus_port }}
HEALTH_CHECK_INTERVAL={{ health_check_interval }}
HEALTH_CHECK_TIMEOUT={{ health_check_timeout }}
PROMETHEUS_METRICS_ENABLED={{ prometheus_metrics_enabled }}

# Production Configuration
TRUST_PROXY={{ trust_proxy }}
KEEP_ALIVE_TIMEOUT={{ keep_alive_timeout }}
HEADERS_TIMEOUT={{ headers_timeout }}
MAX_CONNECTIONS={{ max_connections }}

# Email Configuration (Optional)
EMAIL_HOST={{ email_host }}
EMAIL_PORT={{ email_port }}
EMAIL_USER={{ email_user }}
EMAIL_PASSWORD={{ email_password }}
EMAIL_FROM={{ email_from }}